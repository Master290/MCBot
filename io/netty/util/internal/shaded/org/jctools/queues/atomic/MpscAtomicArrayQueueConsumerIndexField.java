package io.netty.util.internal.shaded.org.jctools.queues.atomic;

import java.util.concurrent.atomic.AtomicLongFieldUpdater;

















































































































































































































































abstract class MpscAtomicArrayQueueConsumerIndexField<E>
  extends MpscAtomicArrayQueueL2Pad<E>
{
  private static final AtomicLongFieldUpdater<MpscAtomicArrayQueueConsumerIndexField> C_INDEX_UPDATER = AtomicLongFieldUpdater.newUpdater(MpscAtomicArrayQueueConsumerIndexField.class, "consumerIndex");
  private volatile long consumerIndex;
  
  MpscAtomicArrayQueueConsumerIndexField(int capacity)
  {
    super(capacity);
  }
  
  public final long lvConsumerIndex()
  {
    return consumerIndex;
  }
  
  final long lpConsumerIndex() {
    return consumerIndex;
  }
  
  final void soConsumerIndex(long newValue) {
    C_INDEX_UPDATER.lazySet(this, newValue);
  }
}
